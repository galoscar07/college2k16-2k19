Laboratory 5 - exemple

; The words A and B are given. Obtain the word C in the following way:
;- the bits 0-2 of C are the same as the bits 10-12 of B
;- the bits 3-6 of C have the value 1
;- the bits 7-10 of C are the same as the bits 1-4 of A
;- the bits 11-12 of C have the value 0
;- the bits 13-15 of C are the invert of the bits 9-11 of B

; We will obtain the word C by succesive "isolation" of bits sequences.
; We call isolation of bits 10-12 of B the operation by which the value of these
; bits is kept unchanged while the values of all the other bits are made 0.
; The isolation is made by using the operator AND between the word B and
; 0001110000000000. Once isolated, the sequence of bits is put on the right 
; position by using a rotate operation. The final word is obtained by applying the
; operator OR between all intermediate results obtained by using isolations and rotations.
; Obs: the rank of the bits starts with 0 from the right hand side

assume cs:code, ds:data
data segment
    a dw 0111011101010111b
    b dw 1001101110111110b
    c dw ?
data ends

code segment
start:
     mov ax, data ; we load in ds the address of data segment
     mov ds, ax

     mov bx, 0 ; we compute the result in bx

     mov ax, b ; we isolate the bits 10-12 of b
     and ax, 0001110000000000b
     mov cl, 10
     ror ax, cl ; we rotate 10 positions to the right
     or bx, ax ; we put the bits into the result

     or bx, 0000000001111000b ; we force the value of bits 3-6 to 1

     mov ax, a ; we isolate the bits 1-4 of a
     and ax, 0000000000011110b
     mov cl, 6
     rol ax, cl ; we rotate 6 positions to the left
     or bx, ax ; we put the bits into the result

     and bx, 1110011111111111b ; we force the value of bits 11-12 to 0

     mov ax, b
     not ax ; we invert the value of b
     and ax, 0000111000000000b ; we isolated the bits 9-11 of b
     mov cl, 4
     rol ax, cl ; we shift 4 positions to the left
     or bx, ax ; we put the bits into the result

     mov c, bx ; we put the value of the register into the memory location for the result

     mov ax, 4c00h
     int 21h
code ends
end start
